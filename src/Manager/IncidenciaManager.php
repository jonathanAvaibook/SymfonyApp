<?php


namespace App\Manager;


use App\Entity\Incidencia;
use App\Event\IncidenciaEvent;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use App\Helpers\Aviso;
use App\Form\BusqIncidenciaType;
use Symfony\Component\HttpFoundation\File\Exception\FileException;

class IncidenciaManager
{
    protected $em;
    protected $dispatcher;

    public function __construct(EntityManagerInterface $em, EventDispatcherInterface $dispatcher)
    {
        $this->em = $em;
        $this->dispatcher = $dispatcher;
    }

    public function newObject() : Incidencia
    {
            $incidencia = new Incidencia();
            return $incidencia;
    }
    public function create(Incidencia $incidencia) :Incidencia
    {
        $codigo = $incidencia->getId();
        $incidencia->setCodigo($codigo);

        $file = $incidencia->getAdjunto();

        /*
        $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
        try {
            $file->move(
                $this->getParameter('adjuntos_directory'),
                $fileName
            );
        } catch (FileException $e) {
            // ... handle exception if something happens during file upload
        }
        $incidencia->setAdjunto($fileName);
        */
        $this->em->persist($incidencia);

        $event = new IncidenciaEvent($incidencia);
        $this->dispatcher->dispatch(IncidenciaEvent::SAVED, $event);
        //$this->addFlash('success', 'El nuevo se ha creado correctamente');
        $this->em->flush();
        return $incidencia;
    }

    public function createFromConsole(Incidencia $incidencia) :Incidencia
    {

        $this->em->persist($incidencia);

        $event = new IncidenciaEvent($incidencia);
        $this->dispatcher->dispatch(IncidenciaEvent::SAVED, $event);
        //$this->addFlash('success', 'El nuevo se ha creado correctamente');
        $this->em->flush();
        return $incidencia;
    }

    public function update(Incidencia $incidencia) :Incidencia
    {
        $this->em->flush($incidencia);

        return $incidencia;
    }

    public function delete(Incidencia $incidencia) :Incidencia
    {
        $this->em->remove($incidencia);
        return $incidencia;
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}